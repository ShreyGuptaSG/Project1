SELECT * FROM `x-circle-336511.folio1.CovidDeath` 
ORDER BY location, date LIMIT 10

SELECT * FROM `x-circle-336511.folio1.CovidVaccination` 
ORDER BY location, date LIMIT 10

SELECT location, date, population, total_cases, new_cases, total_deaths 
FROM `x-circle-336511.folio1.CovidDeath` 
order by location, date

-- Total cases VS Total Deaths
-- likelihood of dying by covid respective country
SELECT location, date, total_deaths, total_cases, (total_deaths/total_cases)*100 AS Deathpercentage
FROM `x-circle-336511.folio1.CovidDeath` 
where location like '%stralia%'
order by location, date
 
 -- Total Cases vs Population
-- Shows what percentage of population infected with Covid
SELECT location, date, population, total_cases, (total_cases/population)*100 AS Covidpercentage
FROM `x-circle-336511.folio1.CovidDeath` 
where location like '%stralia%'
order by location, date

-- Countries with Highest Infection Rate compared to Population
SELECT location, population, MAX(total_cases) AS HighInfection, MAX((total_cases/population))*100 AS PopulationCovidpercentage
FROM `x-circle-336511.folio1.CovidDeath` 
group by location, population
order by PopulationCovidpercentage DESC

-- Countries with Highest Death Count per Population
SELECT location, population, MAX(total_deaths) AS HighInfection, MAX((total_deaths/population))*100 AS PopulationDeathpercentage
FROM `x-circle-336511.folio1.CovidDeath` 
group by location, population
order by PopulationDeathpercentage DESC

-- BREAKING THINGS DOWN BY CONTINENT
-- Showing contintents with the highest death count per population

SELECT distinct continent, MAX(total_deaths) AS total_deaths, MAX(population)AS population, MAX((total_deaths/population))*100 AS PopulationDeathpercentage
FROM `x-circle-336511.folio1.CovidDeath` 
Where continent is not null
group by continent
order by PopulationDeathpercentage DESC

-- GLOBAL NUMBERS

SELECT SUM((new_deaths)) AS new_deaths, SUM(distinct(population)) AS population, (SUM((new_deaths))/SUM(distinct(population)))*100 AS PopulationDeathpercentage
FROM `x-circle-336511.folio1.CovidDeath` 
Where continent is not null

-- Total Population vs Vaccinations
-- Shows Percentage of Population that has recieved at least one Covid Vaccine

SELECT dea.date, dea.continent, dea.location, dea.population, vac.new_vaccinations, sum(vac.new_vaccinations) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.Date) AS rolling
FROM `x-circle-336511.folio1.CovidDeath` dea JOIN `x-circle-336511.folio1.CovidVaccination`AS vac
	On dea.date = vac.date
  AND dea.location = vac.location
where dea.continent is not null 
order by 3,1

 -- Using CTE to perform Calculation on Partition By in previous query ( Common Table Expression)**FAILED 
 
with CTE (date, continent, location, population, new_vaccinaions) AS 
(
  SELECT 
  dea.date, dea.continent, dea.location, dea.population, vac.new_vaccinations, sum(vac.		new_vaccinations) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.Date) AS rolling
FROM `x-circle-336511.folio1.CovidDeath` dea JOIN `x-circle-336511.folio1.CovidVaccination`AS vac
	On dea.date = vac.date
  AND dea.location = vac.location
where dea.continent is not null 
)
Select * from CTE 

-- Using Temp Table to perform Calculation on Partition By in previous query

DROP Table if exists #PercentPopulationVaccinated
Create Table #PercentPopulationVaccinated
(
Continent nvarchar(255),
Location nvarchar(255),
Date datetime,
Population numeric,
New_vaccinations numeric,
RollingPeopleVaccinated numeric
)

Insert into #PercentPopulationVaccinated
Select dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, SUM(CONVERT(int,vac.new_vaccinations)) OVER (Partition by dea.Location Order by dea.location, dea.Date) as RollingPeopleVaccinated
--, (RollingPeopleVaccinated/population)*100
From PortfolioProject..CovidDeaths dea
Join PortfolioProject..CovidVaccinations vac
	On dea.location = vac.location
	and dea.date = vac.date
--where dea.continent is not null 
--order by 2,3

Select *, (RollingPeopleVaccinated/Population)*100
From #PercentPopulationVaccinated

-- Creating View to store data for later visualizations
CREATE VIEW PercentPopulationVaccinated as
SELECT dea.date, dea.continent, dea.location, dea.population, vac.new_vaccinations, sum(vac.new_vaccinations) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.Date) AS rolling
FROM `x-circle-336511.folio1.CovidDeath` dea JOIN `x-circle-336511.folio1.CovidVaccination`AS vac
	On dea.date = vac.date
  AND dea.location = vac.location
where dea.continent is not null 
